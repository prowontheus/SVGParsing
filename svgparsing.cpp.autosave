#include "svgparsing.h"
#include "ui_svgparsing.h"

SVGParsing::SVGParsing(QWidget *parent) :
    QWidget(parent),
    ui(new Ui::SVGParsing)
{
    ui->setupUi(this);
}

SVGParsing::~SVGParsing()
{
    delete ui;
}

void SVGParsing::on_pushButton_clicked()
{
//    QXmlStreamReader qsr;
    QString filePath = QFileDialog::getOpenFileName(0, "打开文件", ".", "SVG(*.svg)");
    if(filePath.isNull())
        return;

    FILE *fd = fopen(filePath.toStdString().c_str(),"r");
    if(nullptr == fd)
    {
        QMessageBox::StandardButton qmb = QMessageBox::information(this, "提示","打不开文", QMessageBox::Ok);
        return;
    }
    char buf[1024];
    memset(buf,0,1024);
    int count = fread(buf,1,sizeof(buf),fd);
    char *pos = nullptr;
    long long ret = 0;
    int i = 0;
//    while(count > 0)
//    {
//        pos = strstr(buf,"<text x=");
//        if(pos == nullptr)
//        {
//            count = fread(buf,1,sizeof(buf),fd);
//            ret += count;
//        }
//        else
//        {
//            qDebug() << "ret=" << ret;
//        }
//        i++;
//    }
//    fwrite(buf,strlen(buf),1,fd);

//    fstream file(filePath.toStdString());
//    vector<string> words;
//    string line;
//    int pos = 0;
//    while (getline(file,line))
//    {
//        pos = line.find("<desc>");
//        if(string::npos != pos)
//        {
//            words.push_back(line);
//        }
//    }

    QFile file(filePath);
    if(file.open(QIODevice::ReadOnly | QIODevice::Text))
    {
        QXmlStreamReader reader(&file);
        while(!reader.atEnd())
        {
            //判断是否是节点的开始
            if(reader.isStartElement())
            {
                //将属性读出:例如 id="3" age = "23">
                QXmlStreamAttributes attributes = reader.attributes();
                //判断是否存在属性"id"
                if(attributes.hasAttribute("id"))
                {
                    //将属性id追加textBrower
                    ui->textBrowser->append(QString("id:%1").arg(attributes.value("id").toString()));
                } 
                //判断当前节点的名字是否为Number
                if(reader.name() == "Number")
                    ui->textBrowser->append(QString("Number:%1").arg(reader.readElementText()));
                //判断当前节点的名字是否为Name
                else if(reader.name() == "Name")
                    ui->textBrowser->append(QString("Name:%1").arg(reader.readElementText()));
                //判断当前节点的名字是否为email
                else if(reader.name() == "email")
                    ui->textBrowser->append(QString("email:%1").arg(reader.readElementText()));
                //判断当前节点的名字是否为website
                else if(reader.name() == "website")
                    ui->textBrowser->append(QString("website:%1").arg(reader.readElementText()));
            }
            //节点结束、并且节点名字为Data（含有子节点）
            else if(reader.isEndElement() && reader.name() == "Data")
            {
                ui->textBrowser->append("--------------------");
                ui->textBrowser->append("");
            }
            reader.readNext();
        }
        file.close();
    }
    else
    {
        qDebug()<<"Open file hello.xml failure";
    }
    QSvgRenderer* svgRender = new QSvgRenderer();
    svgRender->load(filePath);
    QPixmap* pixmap = new QPixmap(1024,512);
    pixmap->fill(Qt::transparent);//设置背景透明
    QPainter p(pixmap);
    svgRender->render(&p);

    ui->labelSvg->setPixmap(*pixmap);
    setText(QStringLiteral("红色闪闪的五角星"));
}

void SVGParsing::setPixmap(QPixmap* pixmap) {
    _pixmap = pixmap;
    ui->labelSvg->setPixmap(*pixmap);
}

void SVGParsing::setText(QString str) {
    _strText = str;
}
